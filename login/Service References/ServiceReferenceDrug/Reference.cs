//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace login.ServiceReferenceDrug {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceDrug.WebServiceDrugStockSoap")]
    public interface WebServiceDrugStockSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddStock(string drugId, string newStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string drugId, string newStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchDrug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet searchDrug(string drugId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchDrug", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> searchDrugAsync(string drugId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertDrug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertDrug(string drugID, string drugName, string drugQty, string price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertDrug", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertDrugAsync(string drugID, string drugName, string drugQty, string price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendAdvertisement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendAdvertisement(string drugID, string drugAmnt, string drugQty, string price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendAdvertisement", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendAdvertisementAsync(string drugID, string drugAmnt, string drugQty, string price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDrugs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getDrugs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getDrugs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getDrugsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTenderProposal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getTenderProposal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTenderProposal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTenderProposalAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceDrugStockSoapChannel : login.ServiceReferenceDrug.WebServiceDrugStockSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceDrugStockSoapClient : System.ServiceModel.ClientBase<login.ServiceReferenceDrug.WebServiceDrugStockSoap>, login.ServiceReferenceDrug.WebServiceDrugStockSoap {
        
        public WebServiceDrugStockSoapClient() {
        }
        
        public WebServiceDrugStockSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceDrugStockSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceDrugStockSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceDrugStockSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddStock(string drugId, string newStock) {
            return base.Channel.AddStock(drugId, newStock);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string drugId, string newStock) {
            return base.Channel.AddStockAsync(drugId, newStock);
        }
        
        public System.Data.DataSet searchDrug(string drugId) {
            return base.Channel.searchDrug(drugId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> searchDrugAsync(string drugId) {
            return base.Channel.searchDrugAsync(drugId);
        }
        
        public string insertDrug(string drugID, string drugName, string drugQty, string price) {
            return base.Channel.insertDrug(drugID, drugName, drugQty, price);
        }
        
        public System.Threading.Tasks.Task<string> insertDrugAsync(string drugID, string drugName, string drugQty, string price) {
            return base.Channel.insertDrugAsync(drugID, drugName, drugQty, price);
        }
        
        public string sendAdvertisement(string drugID, string drugAmnt, string drugQty, string price) {
            return base.Channel.sendAdvertisement(drugID, drugAmnt, drugQty, price);
        }
        
        public System.Threading.Tasks.Task<string> sendAdvertisementAsync(string drugID, string drugAmnt, string drugQty, string price) {
            return base.Channel.sendAdvertisementAsync(drugID, drugAmnt, drugQty, price);
        }
        
        public System.Data.DataSet getDrugs() {
            return base.Channel.getDrugs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getDrugsAsync() {
            return base.Channel.getDrugsAsync();
        }
        
        public System.Data.DataSet getTenderProposal() {
            return base.Channel.getTenderProposal();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTenderProposalAsync() {
            return base.Channel.getTenderProposalAsync();
        }
    }
}
